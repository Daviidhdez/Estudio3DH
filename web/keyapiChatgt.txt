
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

IA Index 

<script>
const chatbotWindow = document.getElementById('chatbot-window');
const chatbotMessages = document.getElementById('chatbot-messages');
const chatbotInput = document.getElementById('chatbot-input');
const chatbotClose = document.getElementById('chatbot-close');
const chatbotButton = document.getElementById('chatbot-button');

// Mostrar el chat autom√°ticamente a los 4 segundos
window.addEventListener('load', () => {
  if (!localStorage.getItem('chatbotClosed')) {
    setTimeout(() => {
      chatbotWindow.classList.remove('hidden');
      chatbotInput.focus();
    }, 4000);
  }
});

// Reabrir el chat al hacer clic
chatbotButton.addEventListener('click', () => {
  chatbotWindow.classList.remove('hidden');
  chatbotInput.focus();
});

// Cerrar el chat
chatbotClose.addEventListener('click', () => {
  chatbotWindow.classList.add('hidden');
  localStorage.setItem('chatbotClosed', 'true');
});

// Enviar mensaje al presionar Enter
chatbotInput.addEventListener('keydown', e => {
  if (e.key === 'Enter' && chatbotInput.value.trim() !== '') {
    const userText = chatbotInput.value.trim();
    addMessage(userText, 'user');
    chatbotInput.value = '';
    respondToAI(userText); // Aqu√≠ llamas a la funci√≥n que hace fetch
  }
});

// Agregar mensajes al chat
function addMessage(text, sender) {
  const messageDiv = document.createElement('div');
  messageDiv.textContent = text;
  messageDiv.className = sender === 'user' ? 'user-message' : 'bot-message';
  chatbotMessages.appendChild(messageDiv);
  chatbotMessages.scrollTop = chatbotMessages.scrollHeight;
}

// Funci√≥n para enviar mensajes del bot
function sendBotMessage(text) {
  addMessage(text, 'bot');
}

// Funci√≥n que se conecta al servidor y llama a OpenAI
async function respondToAI(userText) {
  sendBotMessage("Estoy pensando... ü§ñ");

  try {
    // <<< Aqu√≠ va tu fetch
    const response = await fetch("http://localhost:3000/chat", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ message: userText })
    });

    const data = await response.json();
    const aiText = data.reply;

    // Quitar "Estoy pensando..."
    const lastMessage = chatbotMessages.querySelector(".bot-message:last-child");
    if (lastMessage.textContent === "Estoy pensando... ü§ñ") lastMessage.remove();

    sendBotMessage(aiText);

  } catch (error) {
    console.error("Error IA:", error);
    sendBotMessage("Lo siento, hubo un problema al procesar tu mensaje. Intenta de nuevo.");
  }
}
</script>


IA COntacto 

<script>
  const chatbotWindow = document.getElementById('chatbot-window');
  const chatbotMessages = document.getElementById('chatbot-messages');
  const chatbotInput = document.getElementById('chatbot-input');
  const chatbotClose = document.getElementById('chatbot-close');
  const chatbotButton = document.getElementById('chatbot-button');

  // Mostrar el chat autom√°ticamente a los 4 segundos si no est√° cerrado previamente
  window.addEventListener('load', () => {
    if (!localStorage.getItem('chatbotClosed')) {
      setTimeout(() => {
        chatbotWindow.classList.remove('hidden');
        chatbotInput.focus();
      }, 4000);
    }
  });

  // Reabrir el chat cuando haces clic en el bot
  chatbotButton.addEventListener('click', () => {
    chatbotWindow.classList.remove('hidden');
    chatbotInput.focus();
  });

  // Cerrar el chat y guardar estado en localStorage
  chatbotClose.addEventListener('click', () => {
    chatbotWindow.classList.add('hidden');
    localStorage.setItem('chatbotClosed', 'true');
  });

  // Enviar mensaje al presionar Enter
  chatbotInput.addEventListener('keydown', e => {
    if (e.key === 'Enter' && chatbotInput.value.trim() !== '') {
      const userText = chatbotInput.value.trim();
      addMessage(userText, 'user');
      chatbotInput.value = '';
      setTimeout(() => {
        respondTo(userText);
      }, 700);
    }
  });

  function addMessage(text, sender) {
    const messageDiv = document.createElement('div');
    messageDiv.textContent = text;
    messageDiv.className = sender === 'user' ? 'user-message' : 'bot-message';
    chatbotMessages.appendChild(messageDiv);
    chatbotMessages.scrollTop = chatbotMessages.scrollHeight;
  }

  function sendBotMessage(text) {
    addMessage(text, 'bot');
  }

  function respondTo(text) {
    const lower = text.toLowerCase();
    let response = "Lo siento, no entend√≠ tu pregunta. Puedes escribirnos directamente desde la p√°gina de contacto.";

    if (lower.includes('hola') || lower.includes('buenas')) {
      response = "¬°Hola! ¬øC√≥mo puedo ayudarte hoy?";
    } else if (lower.includes('servicio') || lower.includes('qu√© haces')) {
      response = "Ofrecemos dise√±o web personalizado, desarrollo responsivo, mantenimiento SEO, tiendas online y m√°s.";
    } else if (lower.includes('contacto') || lower.includes('c√≥mo contacto')) {
      response = "Puedes usar el formulario de contacto o enviarnos un email a info@estudio3dh.com.";
    } else if (lower.includes('precio') || lower.includes('cu√°nto cuesta')) {
      response = "Nuestros precios dependen del proyecto. ¬°Cont√°ctanos para un presupuesto sin compromiso!";
    } else if (lower.includes('gracias')) {
      response = "¬°De nada! Si tienes m√°s preguntas, estoy aqu√≠ para ayudarte.";
    }

    sendBotMessage(response);
  }
</script>